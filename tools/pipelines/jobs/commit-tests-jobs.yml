parameters:
  job: ''
  jobDisplayName: ''
  scriptDisplayName: ''
  testKindParameter: ''
  packageFeed: ''
  nodeJsVersion: ''
  disableCache: ''
  isPullRequest: ''
  appName: ''
  parallel: ''


jobs:
  - job: ${{ parameters.job }}
    strategy:
      parallel: ${{ parameters.parallel }}
    displayName: ${{ parameters.jobDisplayName }}
    steps:
      - template: '../steps/cache-install-npm.yml'
        parameters:
          packageFeed: ${{ parameters.packageFeed }}
          nodeJsVersion:  ${{ parameters.nodeJsVersion }}
          disableCache: ${{ parameters.disableCache }}

      - script: yarn test:parallel ${{parameters.isPullRequest}} ${{parameters.appName}} $(System.TotalJobsInPhase) $(System.JobPositionInPhase) ${{ parameters.testKindParameter }}
        displayName: ${{ parameters.scriptDisplayName }}

      - task: PublishPipelineArtifact@1
        condition: eq(variables['build.sourceBranch'], 'refs/heads/master') # We only publish coverage after merge, so no need to create the artifact here
        displayName: 'Create coverage artifacts'
        inputs:
          path: $(Build.SourcesDirectory)/coverage/ # Create artifact with what's inside coverage folder

      - task: PublishTestResults@2
        displayName: 'Publish Test Result'
        condition: and(succeededOrFailed(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
        inputs:
          testRunner: VSTest
          testResultsFiles: '**/*test*.trx'
          failTaskOnFailedTests: false