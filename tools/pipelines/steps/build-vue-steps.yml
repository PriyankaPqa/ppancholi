steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '17.x'
    displayName: 'Install Node.js'

  - task: Cache@2
    displayName: Cache yarn packages
    inputs:
      key: '"$(Agent.OS)" | **/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock'
      path: $(Build.SourcesDirectory)/node_modules
      cacheHitVar: CACHE_HIT

  - task: Yarn@3
    displayName: 'Install yarn packages'
    condition: ne(variables['CACHE_HIT'], 'true')
    inputs:
     customRegistry: 'useFeed'
     customFeed: ${{ parameters.packageFeed }}
     arguments: --frozen-lockfile

  - script: node ./tools/scripts/run-commands.js coverage ${{parameters.isPullRequest}} ${{parameters.appName}}
    displayName: 'Test affected packages'
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

  - task: PublishTestResults@2
    displayName: 'Publish Test Result'
    condition: and(succeededOrFailed(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*result*.trx'
      failTaskOnFailedTests: false

  - script: node ./tools/scripts/merge-test-coverage.js
    displayName: 'Merge Code Coverage Reports'
    condition: and(succeededOrFailed(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Merged Code Coverage'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/coverage/merged-cobertura-coverage.xml'
      failIfCoverageEmpty: false
    condition: eq(variables['build.sourceBranch'], 'refs/heads/master')

  - script: yarn ${{ parameters.lokaliseCommand }}
    displayName: 'Lokalise Sync'
    workingDirectory: ${{ parameters.workingDir }}
    condition: and(succeeded(), eq('${{ parameters.lokalise }}', true))

  - script: yarn ${{ parameters.buildCommand }}
    displayName: 'Build'
    workingDirectory: ${{ parameters.workingDir }}

