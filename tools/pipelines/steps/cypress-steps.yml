parameters:
  packageFeed: ''
  nodeJsVersion: ''
  distDir: ''
  workingDir: ''

steps:
  - template: '../steps/cache-install-npm.yml'
    parameters:
      packageFeed: ${{ parameters.packageFeed }}
      nodeJsVersion: ${{ parameters.nodeJsVersion }}

  # Caching the binary takes roughly same amount of time as always downloading it
  - script: yarn cypress install
    displayName: 'Install cypress binary'
    workingDirectory: ${{ parameters.workingDir }}

  # Optional
  - script: yarn cy:verify
    displayName: 'Cypress verify'
    workingDirectory: ${{ parameters.workingDir }}

  # Optional
  - script: yarn cy:cache:list
    displayName: 'Cypress cache List'
    workingDirectory: ${{ parameters.workingDir }}

  # Optional
  - script: yarn cy:info
    displayName: 'Cypress info'
    workingDirectory: ${{ parameters.workingDir }}
    env:
      CYPRESS_CONTRIBUTOR1_PASSWORD: $(CYPRESS_CONTRIBUTOR1_PASSWORD)
      CYPRESS_CONTRIBUTOR2_PASSWORD: $(CYPRESS_CONTRIBUTOR2_PASSWORD)
      CYPRESS_CONTRIBUTOR3_PASSWORD: $(CYPRESS_CONTRIBUTOR3_PASSWORD)
      CYPRESS_USER_0_PASSWORD: $(CYPRESS_USER_0_PASSWORD)
      CYPRESS_USER_1_PASSWORD: $(CYPRESS_USER_1_PASSWORD)
      CYPRESS_USER_2_PASSWORD: $(CYPRESS_USER_2_PASSWORD)
      CYPRESS_USER_3_PASSWORD: $(CYPRESS_USER_3_PASSWORD)
      CYPRESS_USER_4_PASSWORD: $(CYPRESS_USER_4_PASSWORD)
      CYPRESS_USER_5_PASSWORD: $(CYPRESS_USER_5_PASSWORD)
      CYPRESS_USER_6_PASSWORD: $(CYPRESS_USER_6_PASSWORD)
      CYPRESS_USER_NO_ROLE_PASSWORD: $(CYPRESS_USER_NO_ROLE_PASSWORD)
      CYPRESS_USER_READ_ONLY_PASSWORD: $(CYPRESS_USER_READ_ONLY_PASSWORD)
      CYPRESS_AZURE_CLIENT_SECRET: $(CYPRESS_AZURE_CLIENT_SECRET)
      CYPRESS_IDS_CLIENT_SECRET: $(CYPRESS_IDS_CLIENT_SECRET)
      SPIRA_TOKEN: $(SPIRA_TOKEN)

  # The WebApp artifact (dist) was created in a previous stage/job
  # We need to download it again in app folder before running the server
  - task: DownloadPipelineArtifact@2
    displayName: 'Download web app'
    inputs:
      buildType: 'current'
      artifactName: 'dist'
      targetPath: ${{ parameters.distDir }}

  # Will replace the env variables placeholders by the one contained in the library used by this stage here: Env-Dev
  - task: replacetokens@5
    displayName: 'Replace Tokens'
    inputs:
      targetFiles: "index*.js"
      rootDirectory: '${{ parameters.distDir }}/assets'
      tokenPattern: 'default'
      encoding: "auto"
      writeBOM: true
      verbosity: "detailed"
      actionOnMissing: "warn"
      keepToken: false
      useLegacyPattern: false
      enableTelemetry: true

  # Run a local server, wait for it and then start testing with cypress
  # Kill the server after it's done
  - script: |
      yarn start-server-and-test 'yarn vite preview' http-get://localhost:8080 'yarn cy:report --spec "$(CYPRESS_SPEC)" --record --key $(CYPRESS_RECORD_KEY) --parallel --ci-build-id "$BUILD_BUILDNUMBER+$SYSTEM_JOBATTEMPT" --group "Azure CI"'
    workingDirectory: ${{ parameters.workingDir }}
    displayName: 'Run cypress tests'
    env:
      TERM: xterm # avoid warnings about terminal
      CYPRESS_CONTRIBUTOR1_PASSWORD: $(CYPRESS_CONTRIBUTOR1_PASSWORD)
      CYPRESS_CONTRIBUTOR2_PASSWORD: $(CYPRESS_CONTRIBUTOR2_PASSWORD)
      CYPRESS_CONTRIBUTOR3_PASSWORD: $(CYPRESS_CONTRIBUTOR3_PASSWORD)
      CYPRESS_USER_0_PASSWORD: $(CYPRESS_USER_0_PASSWORD)
      CYPRESS_USER_1_PASSWORD: $(CYPRESS_USER_1_PASSWORD)
      CYPRESS_USER_2_PASSWORD: $(CYPRESS_USER_2_PASSWORD)
      CYPRESS_USER_3_PASSWORD: $(CYPRESS_USER_3_PASSWORD)
      CYPRESS_USER_4_PASSWORD: $(CYPRESS_USER_4_PASSWORD)
      CYPRESS_USER_5_PASSWORD: $(CYPRESS_USER_5_PASSWORD)
      CYPRESS_USER_6_PASSWORD: $(CYPRESS_USER_6_PASSWORD)
      CYPRESS_USER_NO_ROLE_PASSWORD: $(CYPRESS_USER_NO_ROLE_PASSWORD)
      CYPRESS_USER_READ_ONLY_PASSWORD: $(CYPRESS_USER_READ_ONLY_PASSWORD)
      CYPRESS_AZURE_CLIENT_SECRET: $(CYPRESS_AZURE_CLIENT_SECRET)
      CYPRESS_IDS_CLIENT_SECRET: $(CYPRESS_IDS_CLIENT_SECRET)
      SPIRA_TOKEN: $(SPIRA_TOKEN)

  # Combine results, so they can be published in Azure Devops
  # Note that this could be optional as we can see results in Cypress Cloud
  - script: yarn cy:combine:reports
    workingDirectory: ${{ parameters.workingDir }}
    displayName: 'Combine test results'

  - task: PublishTestResults@2
    displayName: 'Publish test results'
#    condition: and(succeededOrFailed(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/combined-report.xml'
      failTaskOnFailedTests: false
