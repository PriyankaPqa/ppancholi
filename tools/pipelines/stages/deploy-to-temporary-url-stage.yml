parameters:
  cdnEndpoint: ""
  cdnProfile: ""
  dnsName: "crc-tech.ca"
  storage: ""

stages:
  - stage: "Deploy_to_storage"
    displayName: "Deploy feature"
    dependsOn: "Build_Stage"
    condition: succeeded()
    jobs:
      - deployment: "Deploy_WebApp_Storage"
        displayName: "Deploy WebApp to temporary URL"
        environment: "Dev"
        variables:
          - group: Env-Dev
          - name: branchId
            value: ""
        strategy:
          runOnce:
            deploy:
              steps:
                - powershell: |
                   $branchId = '$(System.PullRequest.SourceBranch)'.Split('/')[3]
                   echo "Branch id is:" $branchId
                   echo "##vso[task.setvariable variable=branchId]$branchId"
                
                - task: qetza.replacetokens.replacetokens-task.replacetokens@6
                  displayName: "Replace Tokens"
                  inputs:
                    sources: "$(Pipeline.Workspace)/dist/**/index*.js"
                    addBOM: true
                    telemetryOptout: true

                - task: AzureCLI@2
                  displayName: "Upload and Move Content in Azure Storage"
                  inputs:
                    azureSubscription: "CRC Tech Dev"
                    scriptType: "pscore"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      # Define the destination directory
                      $branchId = "$(branchId)"
                      $destinationDir = '$web/' + $branchId
                      $accountName = '${{ parameters.storage }}$(environment)'
                      
                      # Upload branchId folder content
                      az storage blob upload-batch --overwrite --destination $destinationDir --account-name $accountName --source "$(Pipeline.Workspace)/dist/$branchId"

                      # Create a temporary directory
                      $tempDir = [System.IO.Path]::Combine($env:TEMP, [System.Guid]::NewGuid().ToString())
                      New-Item -ItemType Directory -Path $tempDir | Out-Null

                      # Copy all other contents to the temporary directory
                      Get-ChildItem -Path "$(Pipeline.Workspace)/dist" | Where-Object { $_.Name -ne $branchId } | ForEach-Object {
                        Copy-Item -Path $_.FullName -Destination $tempDir -Recurse
                      }

                      # Upload the remaining content
                      az storage blob upload-batch --overwrite --destination $destinationDir --account-name $accountName --source $tempDir

                      # Clean up temporary directory
                      Remove-Item -Path $tempDir -Recurse -Force
                    failOnStderr: true

                - task: AzureCLI@2
                  displayName: "Purge CDN"
                  continueOnError: true
                  inputs:
                    azureSubscription: "CRC Tech Dev"
                    scriptType: "pscore"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                       az cdn endpoint purge -n "${{ parameters.cdnEndpoint }}-$(environment)" -g "$(ResourceGroup)" --profile-name "${{ parameters.cdnProfile }}-$(environment)" --content-paths "/*" --no-wait


