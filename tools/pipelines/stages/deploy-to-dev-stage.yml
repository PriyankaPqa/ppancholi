parameters:
  storage: ''
  cdnEndpoint: ''
  cdnProfile: ''

stages:
  - stage: 'Deploy_to_Dev'
    displayName: 'Deploy to Dev'
    dependsOn:
      - E2E_Test_Stage
      - Tests_Stage
    condition: |
      and(
        in(dependencies.E2E_Test_Stage.result, 'Succeeded', 'Skipped'),
        in(dependencies.Tests_Stage.result, 'Succeeded')
      )
    pool:
      vmImage: 'windows-2022'
    jobs:
      - deployment: 'Deploy_WebApp_Dev'
        displayName: 'Deploy WebApp to Dev'
        environment: 'Dev-UI'
        variables:
          - group: Env-Dev
        strategy:
          runOnce:
            deploy:
              steps:
                - template: '../steps/deploy-steps.yml'
                  parameters:
                    storage: ${{ parameters.storage }}
                    cdnEndpoint: ${{ parameters.cdnEndpoint }}
                    cdnProfile: ${{ parameters.cdnProfile }}
                    azureSubscription: 'CRC Tech Dev'

  - stage: 'Deploy_to_Dev_Manual'
    displayName: 'Deploy to Dev (manual)'
    dependsOn:
      - E2E_Test_Stage
      - Tests_Stage
    condition: |
      and(
        in(dependencies.E2E_Test_Stage.result, 'Failed', 'Canceled'),
        in(dependencies.Tests_Stage.result, 'Succeeded')
      )
    pool:
      vmImage: 'windows-2022'
    jobs:
      - deployment: 'Deploy_WebApp_Dev_Manual'
        displayName: 'Deploy WebApp to Dev'
        environment: 'Dev-UI-Gate'
        variables:
          - group: Env-Dev
        strategy:
          runOnce:
            deploy:
              steps:
                - template: '../steps/deploy-steps.yml'
                  parameters:
                    storage: ${{ parameters.storage }}
                    cdnEndpoint: ${{ parameters.cdnEndpoint }}
                    cdnProfile: ${{ parameters.cdnProfile }}
                    azureSubscription: 'CRC Tech Dev'
