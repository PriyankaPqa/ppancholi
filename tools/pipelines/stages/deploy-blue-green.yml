stages:
  - stage: deploy_and_switch_traffic
    condition: succeeded()
    variables:
      frontDoorResourceGroup: 'front-door-leo'
      frontDoorName: 'fd-emis'
      frontDoorUrl: 'fd-leo.crc-tech.ca'
      frontDoorBackendPoolName: 'storage-accounts'
      backendStorageBlue: 'green-blue.azureedge.net'
      backendStorageGreen: 'green-app.azureedge.net'
      targetStorageAccountName: '' # Set in inline script
      targetWebAppUrl: '' # Set in toggle script
    pool:
      vmImage: 'windows-2022'
    displayName: 'Blue/Green Deployment'
    jobs:
      - job: Deploy
        displayName: 'Deploy'
        steps:
          - powershell: |
              $response = Invoke-WebRequest "$(frontDoorUrl)" -UseBasicParsing -Method Head
              $targetStorageAccountName= If ($response.Headers["active-env"] -like "blue-app") {"$(appServiceNameBlue)"} Else {"$(appServiceNameGreen)"}
              Write-Host "##vso[task.setvariable variable=targetStorageAccountName]$targetStorageAccountName"
              Write-Host "Target Storage Account Name for deployment: $targetStorageAccountName"
              displayName: "Detect target environment color for deployment"

          - task: AzureCLI@2
            displayName: 'Clean Target Storage'
            inputs:
              azureSubscription: 'CRC Tech Dev'
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az storage blob delete-batch --source '$web' --account-name '$(targetStorageAccountName)'

          - task: AzureFileCopy@3
            condition: eq(variables['targetStorageAccountName'], 'blue')
            displayName: 'Upload to Azure Storage Blue'
            inputs:
              sourcePath: '$(Pipeline.Workspace)/dist/blue'
              azureSubscription: 'CRC Tech Dev'
              destination: 'AzureBlob'
              storage: '$(targetStorageAccountName)'
              containerName: '$web'

          - task: AzureFileCopy@3
            condition: eq(variables['targetStorageAccountName'], 'green')
            displayName: 'Upload to Azure Storage Green'
            inputs:
              sourcePath: '$(Pipeline.Workspace)/dist/green'
              azureSubscription: 'CRC Tech Dev'
              destination: 'AzureBlob'
              storage: '$(targetStorageAccountName)'
              containerName: '$web'

          - task: AzurePowerShell@4
            displayName: 'Switch environments Blue/Green using Frontdoor Azure CLI'
            inputs:
              azureSubscription: 'CRC Tech Dev'
              ScriptType: 'FilePath'
              ScriptPath: '$(Pipeline.Workspace)/tools/pipelines/switch-storage.ps1'
              ScriptArguments: '-frontDoorResourceGroup $(frontDoorResourceGroup) -frontDoorName $(frontDoorName) -frontDoorBackendPoolName $(frontDoorBackendPoolName) -frontDoorUrl $(frontDoorUrl) -backendStorageBlue $(backendStorageBlue) -backendStorageGreen $(backendStorageGreen)'
              azurePowerShellVersion: 'LatestVersion'
