parameters:
  appName: ''
  packageFeed: ''
  isPullRequest: ''
  nodeJsVersion: ''
  disableCache: ''
  runAcceptanceStage: true
  distDir: ''
  workingDir: ''

stages:
  - stage: 'Post_Build_Stage'
    displayName: 'Post build Stage'
    condition: succeeded()
    jobs:
      - template: '../jobs/commit-tests-jobs.yml'
        parameters:
          job: 'Unit_Test'
          jobDisplayName: 'Unit tests'
          scriptDisplayName: 'Run unit tests & Create coverage'
          testKindParameter: 'unit'
          packageFeed: ${{ parameters.packageFeed }}
          nodeJsVersion: ${{ parameters.nodeJsVersion }}
          disableCache: ${{ parameters.disableCache }}
          isPullRequest: ${{parameters.isPullRequest}}
          appName: ${{parameters.appName}}
          parallel: 1

      - template: '../jobs/commit-tests-jobs.yml'
        parameters:
          job: 'Component_Test'
          jobDisplayName: 'UI components tests'
          scriptDisplayName: 'Run tests & Create coverage'
          testKindParameter: ''
          packageFeed: ${{ parameters.packageFeed }}
          nodeJsVersion: ${{ parameters.nodeJsVersion }}
          disableCache: ${{ parameters.disableCache }}
          isPullRequest: ${{parameters.isPullRequest}}
          appName: ${{parameters.appName}}
          parallel: 3

  - stage: 'Acceptance_Test_Stage'
    condition: and(succeeded(), eq('${{ parameters.runAcceptanceStage }}', true))
    displayName: 'Acceptance Stage'
    jobs:
      - job: Cypress
        displayName: 'Run smoke tests'
        variables:
          - group: Env-Dev-Vite
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          parallel: 2
        steps:
          - template: '../steps/cypress-steps.yml'
            parameters:
              packageFeed: ${{ parameters.packageFeed }}
              nodeJsVersion: ${{ parameters.nodeJsVersion }}
              disableCache: ${{ parameters.disableCache }}
              distDir: ${{ parameters.distDir }}
              workingDir: ${{ parameters.workingDir }}

#      - job: 'Publish_Test_Coverage'
#        dependsOn:
#          - Unit_Test
#          - Component_Test
#        displayName: 'Publish coverage'
#        condition: eq(variables['build.sourceBranch'], 'refs/heads/master')
#        steps:
#          - template: '../steps/cache-install-npm.yml'
#            parameters:
#              packageFeed: ${{ parameters.packageFeed }}
#              disableCache: ${{ parameters.disableCache }}
#              nodeJsVersion: ${{ parameters.nodeJsVersion }}
#
#          - task: DownloadPipelineArtifact@2
#            displayName: 'Download coverage artifacts'
#            inputs:
#              downloadPath: $(Build.SourcesDirectory) # Download code coverage artifact
#              itemPattern: '**/**/cobertura-coverage.xml'
#
#          - script: node ./tools/scripts/merge-test-coverage.js $(Build.SourcesDirectory) # Look for coverage file in Build.SourcesDirectory
#            displayName: 'Merge code coverage reports'
#
#          - task: PublishCodeCoverageResults@1
#            displayName: 'Publish code coverage'
#            inputs:
#              codeCoverageTool: 'Cobertura'
#              summaryFileLocation: '$(Build.SourcesDirectory)/coverage/merged-cobertura-coverage.xml'
#              failIfCoverageEmpty: false
