trigger:
  branches:
    include:
    - master
  paths:
    include:
    - 'apps/emis-app/*'

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: Build-Defaults
- name: Patch
  value: $[counter(format('{0}.{1}',variables['Major'],variables['Minor']),0)]
- name: cdnEndpoint
  value: 'emis-cdne-emis'
- name: cdnProfile
  value: 'emis-cdnp-emis'
- name: workingDir
  value: './apps/emis-app/'
- name: distDir
  value: './apps/emis-app/dist'
- name: appName
  value: 'emis-app'
- name: isPullRequest # Can't be used in condition
  value: $[eq(variables['Build.Reason'], 'PullRequest')]
- name: VUE_APP_VERSION
  value: $(Major).$(Minor).$(Patch)
- name: nodeJsVersion
  value: '16.10.0'
- name: disableCache
  value: 'false' # change this value to force npm package to be installed

- name: browserStack
  value: 'false'

- name: testCommand
  ${{ if eq( variables.browserStack, 'true' ) }}:
    value: 'yarn test:browserstack --testPathPattern=apps/emis-app/tests/'
  ${{ else }}:
    value: 'yarn test:emis'

name: EMIS App - $(Major).$(Minor).$(Patch)

resources:
  repositories:
    - repository: emisFrontEnd
      name: 'EMIS/crc-emis-frontend-tests'
      type: git
      ref: master


stages:
- template: '../../tools/pipelines/main.yml'
  parameters:
    appName: $(appName)
    storage: $(EmisWebAppStorage)
    packageFeed: $(PackageFeed-Npm)
    cdnEndpoint: $(cdnEndpoint)
    cdnProfile: $(cdnProfile)
    workingDir: $(workingDir)
    distDir: $(distDir)
    isPullRequest: $(isPullRequest)
    nodeJsVersion: $(nodeJsVersion)
    appVersion: $(VUE_APP_VERSION)
    disableCache: $(disableCache)
    testCommand: $(testCommand)
